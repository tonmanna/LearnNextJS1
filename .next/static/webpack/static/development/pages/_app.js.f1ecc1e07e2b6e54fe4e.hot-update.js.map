{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.f1ecc1e07e2b6e54fe4e.hot-update.js","sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./pages/_app.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import app from \"next/app\";\r\nconst fetch = require(\"node-fetch\");\r\n\r\nexport default class MyApp extends app {\r\n  static getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = app.getInitialProps({ Component, router, ctx });\r\n\r\n    if (ctx.req.headers.host.match(/localhost/)) {\r\n      pageProps = {\r\n        ...pageProps,\r\n        renderFrom: \"mydomain\",\r\n        headers: ctx.req.headers\r\n      };\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    return (\r\n      <section id=\"app\">\r\n        <Component {...pageProps} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AAeA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AArBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;;;;AAbA;AACA;;;;;A","sourceRoot":""}